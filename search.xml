<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>wemsg</title>
      <link href="/2024/10/19/wemsg/"/>
      <url>/2024/10/19/wemsg/</url>
      
        <content type="html"><![CDATA[<h4 id="1-登录微信"><a href="#1-登录微信" class="headerlink" title="1. 登录微信"></a>1. 登录微信</h4><p>登录要导出数据的微信（不支持微信多开，不支持部分老版本微信）<br>相关信息<br>想把手机端的微信聊天记录转移到电脑上可以使用微信自带的聊天记录迁移功能<br>操作步骤：<br>•安卓： 手机微信-&gt;我-&gt;设置-&gt;聊天-&gt;聊天记录迁移与备份-&gt;迁移-&gt; 迁移到电脑微信（迁移完成后重启微信）否则<br>•iOS： 手机微信-&gt;我-&gt;设置-&gt;通用-&gt;聊天记录迁移与备份-&gt;迁移-&gt; 迁移到电脑微信（迁移完成后重启微信）否则<br>•记得重启微信，因为微信关闭后才会将最新数据写入数据库，所以想获取最新数据请重启微信再启动<br>•<font color='red'>迁移而不是备份、迁移而不是备份、迁移而不是备份；<br>手机微信发起迁移功能、手机微信发起迁移功能、手机微信发起迁移功能；<br>迁移完成后重新登录微信、迁移完成后重新登录微信、迁移完成后重新登录微信</font><br>重要的事情说三遍</p><h4 id="2-点击获取信息"><a href="#2-点击获取信息" class="headerlink" title="2. 点击获取信息"></a>2. 点击获取信息</h4><p>进入工具页后点击获取信息之后，正常情况下所有信息均会自动填充，这时候就直接点击开始启动就行了</p><p>•如果微信路径获取失败就转到解密页手动获取<br>•如果wxid或key为none，多试几次，不行的话先重启电脑再试试，90%都能解决<br>•如果显示key error，有一位大哥将微信文件保存路径修改到其他位置后成功了，注意该路径最好不要包含中文，修改路径之后也记得要重启微信或者重启电脑，实在不行的话可以进群反馈<br>•解析出现问题的可以在获取信息之后关闭微信，然后再点击开始启动</p><h4 id="3-设置微信路径-如果已经自动设置好就跳过该步骤"><a href="#3-设置微信路径-如果已经自动设置好就跳过该步骤" class="headerlink" title="3. 设置微信路径(如果已经自动设置好就跳过该步骤)"></a>3. 设置微信路径(如果已经自动设置好就跳过该步骤)</h4><p>一般上一步点了获取信息后会自动获取微信路径的，如果没有，再手动点获取<br>选择微信-&gt;设置-&gt;文件管理的微信文件默认路径下的wxid_xxx文件夹（一般以wxid_xxx开头，部分微信为自定义字符串，跟MemoTrace里显示的wxid保持一致即可）</p><p>选择底下这个带有wxid的文件夹，该wxid必须和前面获取的wxid一致，否则的话会显示密钥错误</p><h4 id="4-开始运行"><a href="#4-开始运行" class="headerlink" title="4. 开始运行"></a>4. 开始运行</h4><p>•点击“开始运行”按钮，稍等一会，成功后弹出弹窗，点确定后自动关闭应用，重新打开应用</p><h4 id="5-重新打开应用"><a href="#5-重新打开应用" class="headerlink" title="5. 重新打开应用"></a>5. 重新打开应用</h4><p>选择好友页，点击想要导出的报表即可</p><h4 id="6-这些数据库可用普通的SQLite查看器查看"><a href="#6-这些数据库可用普通的SQLite查看器查看" class="headerlink" title="6.这些数据库可用普通的SQLite查看器查看"></a>6.这些数据库可用普通的SQLite查看器查看</h4><p>如【DB Browser for SQLite】建议不懂SQL的就不要看了，应该是看不懂的，重启该软件可直接查看聊天记录</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux安装Java环境并部署发布springboot项目</title>
      <link href="/2024/10/19/xin-de-wen-zhang-3/"/>
      <url>/2024/10/19/xin-de-wen-zhang-3/</url>
      
        <content type="html"><![CDATA[<p>部署java开发环境：<br>系统环境 腾讯云OpenCloudOS8.6</p><h6 id="1，新建目录（非必须，自行选择）"><a href="#1，新建目录（非必须，自行选择）" class="headerlink" title="1，新建目录（非必须，自行选择）"></a>1，新建目录（非必须，自行选择）</h6><p>#tmp存放临时安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/tmp</span><br></pre></td></tr></table></figure><p>#service存放软件环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/service</span><br></pre></td></tr></table></figure><p>#gitee存放代码版本控制库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/gitee</span><br></pre></td></tr></table></figure><h6 id="2，配置jdk环境，"><a href="#2，配置jdk环境，" class="headerlink" title="2，配置jdk环境，"></a>2，配置jdk环境，</h6><p>#进入安装包目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/tmp</span><br></pre></td></tr></table></figure><p>xshell非常好用，有时候想在windows和Linux上下载或上传文件可以通过配置然后使用rz和sz命令实现</p><p>安装工具lrzsz通过yum install lrzsz实现<br>上传文件，通过rz实现<br>下载文件,通过sz实现</p><p>#解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u141-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p>#把解压出来的文件夹转移到统一的地方</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /data/tmp/jdk1.8.0_141 /data/service/jdk1.8.0_141</span><br></pre></td></tr></table></figure><p>#修改环境变量&#x2F;etc&#x2F;profile，JAVA_HOME修改为自己的jdk路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">export JAVA_HOME=/data/service/jdk1.8.0_141</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>#使环境变量生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>#检查是否配置成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h6 id="3，配置maven"><a href="#3，配置maven" class="headerlink" title="3，配置maven"></a>3，配置maven</h6><p>#进入安装包目录，解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /data/tmp</span><br><span class="line">tar -zxvf apache-maven-3.6.3-bin.tar.gz</span><br><span class="line">mv apache-maven-3.6.3 /data/service/</span><br></pre></td></tr></table></figure><p>#修改环境变量&#x2F;etc&#x2F;profile，MAVEN_HOME修改为自己的路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME=/data/service/apache-maven-3.6.3</span><br><span class="line">export PATH=$PATH:$MAVEN_HOME/bin</span><br></pre></td></tr></table></figure><p>#使环境变量生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>#检查是否配置成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -v</span><br></pre></td></tr></table></figure><p>#配置settings.xml，添加本地仓库地址 &#x2F;usr&#x2F;local&#x2F;maven&#x2F;repository</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/maven/repository</span><br></pre></td></tr></table></figure><h6 id="4，安装git环境"><a href="#4，安装git环境" class="headerlink" title="4，安装git环境"></a>4，安装git环境</h6><p>#通过yum安装，本方法最简单。但是无法控制安装的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure><p>#检查是否配置成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>#生成sshkey</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xx@xx.com&quot; //（三次回车，可具体个人自定义配置）</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h6 id="5，安装docker"><a href="#5，安装docker" class="headerlink" title="5，安装docker"></a>5，安装docker</h6><p>#卸载旧版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                docker-client \</span><br><span class="line">                docker-client-latest \</span><br><span class="line">                docker-common \</span><br><span class="line">                docker-latest \</span><br><span class="line">                docker-latest-logrotate \</span><br><span class="line">                docker-logrotate \</span><br><span class="line">                docker-engine</span><br><span class="line">```                </span><br><span class="line">#设置仓库，安装所需的软件包</span><br></pre></td></tr></table></figure><p>sudo yum install -y yum-utils device-mapper-persistent-data lvm2</p><p>yum install <a href="https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm">https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#使用官方源地址（比较慢）</span><br></pre></td></tr></table></figure><p>sudo yum-config-manager <br>  –add-repo <br>  <a href="http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#安装 Docker Engine-Community</span><br></pre></td></tr></table></figure><p>sudo yum install docker-ce docker-ce-cli containerd.io</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#启动 Docker</span><br></pre></td></tr></table></figure><p>sudo systemctl start docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">###### 6，安装mysql（可使用云数据库，自行选择）</span><br><span class="line">在Docker中安装MySQL。</span><br><span class="line"></span><br><span class="line">#查看可用的 MySQL 版本</span><br></pre></td></tr></table></figure><p>docker search mysql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#拉取5.7版本</span><br></pre></td></tr></table></figure><p>docker pull mysql:5.7</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#使用以下命令来查看是否已安装了 mysql</span><br></pre></td></tr></table></figure><p>docker images</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#创建配置文件目录</span><br></pre></td></tr></table></figure><p>mkdir -p &#x2F;data&#x2F;docker&#x2F;mysql&#x2F;conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#进入配置文件目录，添加一个配置文件</span><br></pre></td></tr></table></figure><p>vim my.cnf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#启动镜像</span><br></pre></td></tr></table></figure><p>docker run -p 3306:3306 –name mysql -v &#x2F;data&#x2F;docker&#x2F;mysql&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d -e MYSQL_ROOT_PASSWORD&#x3D;dasqW -d mysql:5.7</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#进入docker容器设置env LANG=C.UTF-8</span><br></pre></td></tr></table></figure><p>docker exec -it mysql env LANG&#x3D;C.UTF-8 bash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ctrl + d 退出 docker bash</span><br><span class="line">外部连接需要腾讯云开放3306端口</span><br><span class="line"></span><br><span class="line">###### 7，安装redis</span><br></pre></td></tr></table></figure><p>docker pull redis:latest<br>docker run -itd –name redis-test -p 6379:6379 redis</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">###### 8，安装node</span><br><span class="line">```tar xf node-v14.15.4-linux-x64.tar.xz       // 解压</span><br><span class="line">cd node-v14.15.4-linux-x64/                 // 进入解压目录</span><br><span class="line">./bin/node -v                               // 执行</span><br></pre></td></tr></table></figure><p>node命令 查看版本<br>#解压文件的 bin 目录底下包含了 node、npm 等命令，我们可以使用 ln 命令来设置软连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv /data/tmp/node-v14.15.4-linux-x64 /data/service/</span><br><span class="line">ln -s /data/service/node-v14.15.4-linux-x64/bin/npm   /usr/local/bin/</span><br><span class="line">ln -s /data/service/node-v14.15.4-linux-x64/bin/node   /usr/local/bin/</span><br></pre></td></tr></table></figure><h6 id="9，安装nginx"><a href="#9，安装nginx" class="headerlink" title="9，安装nginx"></a>9，安装nginx</h6><p>#首先安装nginx前置软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc pcre-devel zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><p>#下载nginx软件安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /data/tmp</span><br><span class="line">wget http://nginx.org/download/nginx-1.19.6.tar.gz</span><br><span class="line">tar -zxvf nginx-1.19.6.tar.gz</span><br><span class="line">cd nginx-1.19.6</span><br></pre></td></tr></table></figure><p>#设置安装目录为&#x2F;usr&#x2F;local&#x2F;nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>#启动nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><h6 id="10，代码"><a href="#10，代码" class="headerlink" title="10，代码"></a>10，代码</h6><p>#新建目录上传代码（安装git的情况直接clone代码即可）<br>&#x2F;data&#x2F;gitee&#x2F;</p><p>#解压代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip xx.zip </span><br></pre></td></tr></table></figure><h6 id="11，打包部署"><a href="#11，打包部署" class="headerlink" title="11，打包部署"></a>11，打包部署</h6><p>cd 项目路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package</span><br></pre></td></tr></table></figure><p>查看jar包 cd 项目&#x2F;target&#x2F;<br>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/app/ruoyi-vue</span><br><span class="line">cp /data/gitee/RuoYi-Vue/ruoyi-admin/target/ruoyi-admin.jar /data/app/ruoyi-vue/ruoyi-admin.jar</span><br><span class="line">cd /data/app/ruoyi-vue/</span><br><span class="line">nohup java -jar ruoyi-admin.jar &amp;</span><br></pre></td></tr></table></figure><p>#前端代码发布<br>cd &#x2F;前端目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm run build:prod</span><br><span class="line">mkdir /data/app/ruoyi-ui</span><br><span class="line">mv dist/* /data/app/ruoyi-ui/</span><br></pre></td></tr></table></figure><p>#把生成好的 dist 文件夹的静态文件发布到你的 nginx 或者静态服务器即可，其中的 index.html 是后台服务的入口页面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>后台端口8080</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    root   /data/app/ruoyi-ui;</span><br><span class="line">    try_files $uri $uri/ /index.html;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /prod-api/ &#123;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_pass http://localhost:8080/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#重新加载配置文件nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令</title>
      <link href="/2024/10/19/xin-de-wen-zhang-2/"/>
      <url>/2024/10/19/xin-de-wen-zhang-2/</url>
      
        <content type="html"><![CDATA[<p>1，mkdir命令<br>要在shell中创建文件夹，可以使用mkdir命令。只需指定新文件夹的名称，确保它不存在，然后就可以开始了。</p><p>例如，要创建一个保存所有图像的目录，只需键入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir images/</span><br></pre></td></tr></table></figure><p>2，chmod命令<br>允许您快速更改文件的模式（权限）。它有很多可用的选项。</p><p>文件的基本权限包括：</p><p>r (只读)<br>w (写入)<br>x (执行)<br>chmod最常见的用例之一是使文件可由用户执行。为此，请键入chmod和标志+x，然后键入要修改其权限的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x script</span><br></pre></td></tr></table></figure><p>3，sudo 命令<br>此命令代表“超级用户do”，它允许您在运行特定命令时充当超级用户或根用户。这就是Linux如何保护自己，防止用户意外修改机器的文件系统或安装不合适的软件包。</p><p>Sudo通常用于安装软件或编辑用户主目录以外的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gimp</span><br><span class="line">sudo cd /root/</span><br></pre></td></tr></table></figure><p>4，unzip 命令<br>unzip命令允许您从终端提取.zip文件的内容。同样，默认情况下可能不会安装此软件包，因此请确保使用package管理器安装它。</p><p>下面命令行，指正在解压一个包含图像的.zip文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip images.zip</span><br></pre></td></tr></table></figure><p>5，echo 命令<br>echo命令在终端中显示定义的文本-就这么简单：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;Cool message&quot;</span><br></pre></td></tr></table></figure><p>它的主要用途是在这些消息中打印环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;Hey $USER&quot;</span><br></pre></td></tr></table></figure><p>6，cat 命令<br>cat 是“concatenate”的缩写，用于直接从终端创建、查看和连接文件。它主要用于在不打开图形文本编辑器的情况下预览文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat long_text_file.txt</span><br></pre></td></tr></table></figure><p>7，ps 命令<br>使用ps，您可以查看当前shell会话正在运行的进程。它打印有关正在运行的程序的有用信息，如进程ID、TTY（电传打字机）、时间和命令名。</p><p>8，vim 命令<br>vim 是一个免费的开源终端文本编辑器，从90年代开始使用。它允许您使用高效的键绑定编辑纯文本文件。</p><p>9，tail 命令<br>与cat类似，tail打印文件内容时有一个主要警告：它只输出最后几行。默认情况下，它打印最后10行，但您可以使用-n修改该数字。</p><p>例如，要打印大型文本文件的最后几行，可以使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail long.txt</span><br></pre></td></tr></table></figure><p>10，head 命令<br>这是对tail命令的补充。head输出文本文件的前10行，但您可以使用-n标志设置要显示的任意行数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">head long.txt</span><br><span class="line">head -n 5 long.txt</span><br></pre></td></tr></table></figure><p>11，grep 命令<br>Grep是处理文本文件的最强大的工具之一。它搜索与正则表达式匹配的行并打印它们：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;linux&quot; long.txt</span><br></pre></td></tr></table></figure><p>您可以使用-c标志计算与给定条件匹配的次数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -c &quot;linux&quot; long.txt</span><br></pre></td></tr></table></figure><p>12，rm命令<br>既然您已经知道了如何复制文件，那么了解如何删除它们将很有帮助。</p><p>您可以使用rm命令删除文件和目录。但在使用时要小心，因为用这种方法恢复删除的文件非常困难（但并非不可能）。</p><p>要删除常规文件，请键入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm file_to_copy.txt</span><br></pre></td></tr></table></figure><p>如果要删除空目录，可以使用递归（-r）标志：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -r dir_to_remove/</span><br></pre></td></tr></table></figure><p>另一方面，要删除包含内容的目录，需要使用force（-f）和recursive标志：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf dir_with_content_to_remove/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java修改jpg图片dpi</title>
      <link href="/2024/10/19/xin-de-wen-zhang/"/>
      <url>/2024/10/19/xin-de-wen-zhang/</url>
      
        <content type="html"><![CDATA[<p>使用的包的Oracle jdk下的rt.jar，open jdk 下没有该包，使用open jdk的通过项目引入包的方式可以将包导入，但由于jdk环境不同，使用以下代码修改dpi存在报错情况。<br>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.image.codec.jpeg.JPEGCodec;</span><br><span class="line"><span class="keyword">import</span> com.sun.image.codec.jpeg.JPEGEncodeParam;</span><br><span class="line"><span class="keyword">import</span> com.sun.image.codec.jpeg.JPEGImageEncoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">handleDpi</span><span class="params">(File file, <span class="type">int</span> dpi)</span> &#123;</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> ImageIO.read(file);</span><br><span class="line">            fileOutputStream = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">            <span class="type">JPEGImageEncoder</span> <span class="variable">jpegEncoder</span> <span class="operator">=</span> JPEGCodec.createJPEGEncoder(fileOutputStream);</span><br><span class="line">            <span class="type">JPEGEncodeParam</span> <span class="variable">jpegEncodeParam</span> <span class="operator">=</span> jpegEncoder.getDefaultJPEGEncodeParam(image);</span><br><span class="line">            jpegEncodeParam.setDensityUnit(JPEGEncodeParam.DENSITY_UNIT_DOTS_INCH);</span><br><span class="line">            jpegEncoder.setJPEGEncodeParam(jpegEncodeParam);</span><br><span class="line">            jpegEncodeParam.setQuality(<span class="number">1.0f</span>, <span class="literal">false</span>);</span><br><span class="line">            jpegEncodeParam.setXDensity(dpi);</span><br><span class="line">            jpegEncodeParam.setYDensity(dpi);</span><br><span class="line">            jpegEncoder.encode(image, jpegEncodeParam);</span><br><span class="line">            image.flush();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace(); </span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(fileOutputStream != <span class="literal">null</span>)</span><br><span class="line">                    fileOutputStream.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>注意，当图片由文件流转成jpg格式时，图片位深度为32时，上面的代码会报错，需先将设置图片位深度，代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title function_">changePNGBackgroudColor2</span><span class="params">(String sourceImage)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(sourceImage);</span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> ImageIO.read(input);</span><br><span class="line"></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(</span><br><span class="line">                image.getWidth(),</span><br><span class="line">                image.getHeight(),</span><br><span class="line">                BufferedImage.TYPE_INT_RGB);</span><br><span class="line"></span><br><span class="line">        <span class="type">Graphics2D</span> <span class="variable">graphic</span> <span class="operator">=</span> result.createGraphics();</span><br><span class="line">        graphic.drawImage(image, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        graphic.dispose();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java dpi </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
